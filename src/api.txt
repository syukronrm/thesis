let edges
let nodes
let graph = new_graph(edges, nodes)

let Q = [q1, q2]
let dimensions = Q.flatmap(q.d)

for object in objects:
  if object == insert:
    graph.insert(object)
  else
    graph.delete(object)

graph.insert(self, o):
  let pairs = create_pairs(Q)
  for pair in pairs:
    (dominator, dominated) = get_dominator_and_domiated_objects(o, pair)
    ss = compute_voronoi(o, dominator, pair)
    self.replace_voronoi(o, ss)

    for d in dominated:
      objects = get_dominator(d, pair)
      ss = compute_voronoi(d, dominator, pair)
      self.replace_voronoi(d, ss)

